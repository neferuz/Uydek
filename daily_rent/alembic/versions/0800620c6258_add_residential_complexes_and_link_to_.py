"""add residential complexes and link to apartments

Revision ID: 0800620c6258
Revises: 71d6096cb371
Create Date: 2025-06-25 05:53:44.999711

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0800620c6258'
down_revision: Union[str, None] = '71d6096cb371'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('apartments', sa.Column('residential_complex_id', sa.Integer(), nullable=True))
    op.alter_column('apartments', 'amenities',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('apartments', 'photo_urls',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.String(),
               existing_nullable=True)
    op.create_foreign_key(None, 'apartments', 'residential_complexes', ['residential_complex_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'apartments', type_='foreignkey')
    op.alter_column('apartments', 'photo_urls',
               existing_type=sa.String(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('apartments', 'amenities',
               existing_type=sa.String(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_column('apartments', 'residential_complex_id')
    # ### end Alembic commands ###
